---
layout: post
title:  "2017-12-22 TID"
date:   2017-12-22 11:00:00 +0900
categories: jekyll update
---

# 첫번째 장고앱: 로또 만들기

## 장고와 MTV(Model Template View)

![MTV](https://user-images.githubusercontent.com/33015649/34282928-74a87f90-e70c-11e7-88c8-984f0139b84f.png)
1. 사용자가 웹 브라우져에서 주소(URL)를 입력한다.(ex http://www.inflearn.com~)
1. 위 URL을 입력하면 HTTP Request형태로 Web server에 전달됨
1. Web server에서 Routing(urls.py:URL dispatcher)으로 전달됨
    WSGI(Web Server Gateway Interface) = Web server와 Django에 URL파일을 연결해줌
1. urls.py에서 url을 파싱하고 View(URL을 처리하는 규칙)로 전달됨, View는 콘트롤러가 아니다.
	```Response를 바로 사용자에게 돌려줄 수 있다(일반적으로는 Template과 Model까지 활용)```
	MVC(Model View Controller)와 비교했을 때 view는 의미가 서로 다름. MVC에서 Controller는 dJango
1.  View에서 Model로 넘어가는데 Model은 object임. Model object는 DB를 쉽게 조작할 수 있게 한다. object로 관리를 하여 영구적으로 읽고 쓰기가 가능하다.
1. View와 Model을 거쳐 생겨난 보통 dictionary형태(object)의 date는 view를 다시 거쳐 Template으로 전달됨.
1. Template는 data를 디자인 요소로 처리하여 View로 다시 되돌려준다.
1. 마지막으로 view는 완전히 처리된 data를 reponse한다.

## 프로젝트 및 앱 생성

1.가상환경 만들기

```
$ mkdir pythonenv
$ cd pythonenv
$ python3 -m venv app1env
$ source app1env/bin/activate
```

2.장고 설치

장고를 설치하는데 필요한 ```pip```이 최신버전인지 확인인
```
(app1env) $ pip install --upgrade pip
```

장고설치
```
(app1env) $ pip install django~=1.10
```

그 후 workspace로 이동하여 작업함

3.프로젝트 생성

```
(app1env) $ django-admin startproject mysite
```


4.App 생성

```
(app1env) $ python manage.py startapp lotto
```

atom 에디터 연 후 setting 파일 수정 및 app 등록

LANGUAGE_CODE = 'ko-kr'
timezone = ‘Asia/Seoul’
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
...
INSTALLED_APPS = [
     ... ,
    'lotto',
]

5.server start

```
python manage.py runserver
```
![serverStart](https://user-images.githubusercontent.com/33015649/34285333-60b1f132-e71c-11e7-92ab-f731a8dd280b.png)

6.확인

브라우저 열고 127.0.0.1:8000/ 접속해서 정상동작 확인
![confirm](https://user-images.githubusercontent.com/33015649/34290222-8de78d3e-e739-11e7-9f76-77a3111237fd.png)


## urls.py와 views 수정

## Model 클래스 만들기

## admin site 에 Model 등록하기

## 장고 테스트 코드 작성



